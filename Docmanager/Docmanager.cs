///////////////////////////////////////////////////////////
//  GroupParser.cs
//  Implementation of the Class GroupParser
//  Generated by Enterprise Architect
//  Created on:      26-nov-2022 12:13:28
//  Original author: Lars
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Docmanager;
using System.Runtime.CompilerServices;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

namespace Docmanager
{
    internal class Docmanager
    {
        public class BaseUnit
        {
            public string BasicAuthority { get; set; }
            public string Description { get; set; }
        }

        public class CatalogSymbol
        {
            public string isExplicit { get; set; }
            public string text { get; set; }
        }

        public class ConversionToBaseUnit
        {
            public string baseUnit { get; set; }
            public string Factor { get; set; }
            public Fraction Fraction { get; set; }
            public Formula Formula { get; set; }
        }

        public class Formula
        {
            public string A { get; set; }
            public string B { get; set; }
            public string C { get; set; }
            public string D { get; set; }
        }

        public class Fraction
        {
            public string Numerator { get; set; }
            public string Denominator { get; set; }
        }

        public class Root
        {
            public string id { get; set; }
            public string annotation { get; set; }
            public string Name { get; set; }
            public object QuantityType { get; set; }
            public string DimensionalClass { get; set; }
            public object SameUnit { get; set; }
            public string CatalogName { get; set; }
            public CatalogSymbol CatalogSymbol { get; set; }
            public BaseUnit BaseUnit { get; set; }
            public string Deprecated { get; set; }
            public ConversionToBaseUnit ConversionToBaseUnit { get; set; }
        }
        const string filepath = @"C:\\Users\\Yea\\IKT300\\Engineering units - mappe eksamen\\Converter\\POSC.json";

        string jsonString = File.ReadAllText(filepath);

        JObject jObject = Newtonsoft.Json.JsonConvert.DeserializeObject(File.ReadAllText(filepath)) as JObject;


        // Put changes into file
        //File.WriteAllText(filepath, jObject.ToString());
        //var temp = from unit in jObject["UnitOfMeasure"]
        //where unit["Name"].ToString(Newtonsoft.Json.Formatting.None) == "\"per Kelvin"\"
        //select unit;

        //Console.WriteLine(jObject["UnitOfMeasure"]);


        //Console.WriteLine();
    }//end GroupParser

}//end namespace Docmanager